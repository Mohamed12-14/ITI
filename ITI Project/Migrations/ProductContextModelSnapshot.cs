// <auto-generated />
using ITI_Project.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ITI_Project.Migrations
{
    [DbContext(typeof(ProductContext))]
    partial class ProductContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ITI_Project.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            Description = "Devices and gadgets",
                            Name = "Electronics"
                        },
                        new
                        {
                            CategoryId = 2,
                            Description = "Apparel and accessories",
                            Name = "Clothing"
                        },
                        new
                        {
                            CategoryId = 3,
                            Description = "Various genres of books",
                            Name = "Books"
                        },
                        new
                        {
                            CategoryId = 4,
                            Description = "Household items and kitchenware",
                            Name = "Home & Kitchen"
                        });
                });

            modelBuilder.Entity("ITI_Project.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            CategoryId = 1,
                            Description = "Latest model smartphone",
                            ImagePath = "images/Smartphone.jpg",
                            Price = 299.99000000000001,
                            Quantity = 50,
                            Title = "Smartphone"
                        },
                        new
                        {
                            ProductId = 2,
                            CategoryId = 1,
                            Description = "High performance laptop",
                            ImagePath = "~/images/laptop.jpg",
                            Price = 799.99000000000001,
                            Quantity = 30,
                            Title = "Laptop"
                        },
                        new
                        {
                            ProductId = 3,
                            CategoryId = 1,
                            Description = "Noise-cancelling headphones",
                            ImagePath = "~/images/Headphone.jpg",
                            Price = 99.989999999999995,
                            Quantity = 75,
                            Title = "Bluetooth Headphones"
                        },
                        new
                        {
                            ProductId = 4,
                            CategoryId = 2,
                            Description = "Warm winter jacket",
                            ImagePath = "~/images/Jacket.jpg",
                            Price = 129.99000000000001,
                            Quantity = 40,
                            Title = "Winter Jacket"
                        },
                        new
                        {
                            ProductId = 5,
                            CategoryId = 2,
                            Description = "Comfortable running shoes",
                            ImagePath = "~/images/running-shoes.jpg",
                            Price = 89.989999999999995,
                            Quantity = 60,
                            Title = "Running Shoes"
                        },
                        new
                        {
                            ProductId = 6,
                            CategoryId = 3,
                            Description = "Bestselling novel",
                            ImagePath = "~/images/Novel.jpg",
                            Price = 14.99,
                            Quantity = 100,
                            Title = "Novel"
                        },
                        new
                        {
                            ProductId = 7,
                            CategoryId = 3,
                            Description = "Delicious recipes for home cooking",
                            ImagePath = "~/images/cookbook.jpg",
                            Price = 24.989999999999998,
                            Quantity = 50,
                            Title = "Cookbook"
                        },
                        new
                        {
                            ProductId = 8,
                            CategoryId = 4,
                            Description = "Automatic coffee maker",
                            ImagePath = "~/images/Coffe.jpg",
                            Price = 49.990000000000002,
                            Quantity = 20,
                            Title = "Coffee Maker"
                        },
                        new
                        {
                            ProductId = 9,
                            CategoryId = 4,
                            Description = "Healthy cooking with less oil",
                            ImagePath = "~/images/airfryer.jpg",
                            Price = 79.989999999999995,
                            Quantity = 25,
                            Title = "Air Fryer"
                        },
                        new
                        {
                            ProductId = 10,
                            CategoryId = 4,
                            Description = "Powerful kitchen blender",
                            ImagePath = "~/images/blender.jpg",
                            Price = 59.990000000000002,
                            Quantity = 30,
                            Title = "Blender"
                        });
                });

            modelBuilder.Entity("ITI_Project.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ITI_Project.Models.Product", b =>
                {
                    b.HasOne("ITI_Project.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("ITI_Project.Models.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
